{"version":3,"sources":["components/Card.js","components/Deck.js","components/Game.js","components/AwaitingOpponents.js","App.js","serviceWorker.js","index.js"],"names":["Card","faceValue","color","suit","this","RED_SUITS","BLACK_SUITS","Deck","deck","redSuit","i","push","blackSuit","shuffle","pop","a","j","x","length","Math","floor","random","allPlayersStyle","display","playerStyle","border","width","Game","useState","currentCard","setCurrentCard","handValue","setHandValue","displayName","players","currentPlayer","setCurrentPlayer","displayNextPlayer","setDisplayNextPlayer","email","nextPlayer","e","preventDefault","unshift","useEffect","prevState","bankrupt","winner","map","player","score","gameEnd","className","style","name","id","onClick","hit","getTopCard","playerAction","AwaitingOpponents","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ui","firebaseui","AuthUI","auth","Boolean","window","location","hostname","match","ReactDOM","render","currentUser","setCurrentUser","onlineUsers","setOnlineUsers","start","signInOptions","GoogleAuthProvider","PROVIDER_ID","console","log","Object","keys","ref","on","snapshot","val","onAuthStateChanged","user","userExists","onlineUser","uid","set","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.45633c61.chunk.js","sourcesContent":["class Card {\n    constructor(faceValue, color, suit) {\n        this.faceValue = faceValue;\n        this.color = color;\n        this.suit = suit;\n    }\n}\nexport default Card;","import Card from './Card';\n\nconst RED_SUITS = ['heart', 'diamond'];\nconst BLACK_SUITS = ['spade', 'club'];\nclass Deck {\n    constructor() {\n        this.deck = [];\n        for(let redSuit of RED_SUITS) {\n            for(let i = 1; i <= 13; i++) {\n                this.deck.push(new Card(i, 'red', redSuit));\n            }\n        }\n        for(let blackSuit of BLACK_SUITS) {\n            for(let i = 1; i <= 13; i++) {\n                this.deck.push(new Card(i, 'black', blackSuit));\n            }\n        }\n        this.deck = this.shuffle(this.deck);\n    }\n    getTopCard() {\n        return this.deck.pop();\n    }\n    shuffle(a) {\n        var j, x, i;\n        for(i = a.length - 1; i > 0; i--) {\n            j = Math.floor(Math.random() * (i + 1));\n            x = a[i];\n            a[i] = a[j];\n            a[j] = x;\n        }\n        return a;\n    }\n}\nexport default Deck;","import React, { useEffect, useState } from 'react';\nimport Deck from './Deck';\nimport Card from './Card';\nimport Player from './Player';\nimport * as firebase from 'firebase/app';\nimport 'firebase/database';\n\nconst allPlayersStyle = {\n  display: 'flex'\n}\nconst playerStyle = {\n  border: '2px solid black',\n  width: '100%'\n}\n\nfunction Game() {\n  const [deck, setDeck] = useState(new Deck());\n  const [currentCard, setCurrentCard] = useState(new Card(0, 'red', 'owow'));\n  const [handValue, setHandValue] = useState(0);\n  const [players, setPlayers] = useState([{displayName: 'testname'}]);\n  const [currentPlayer, setCurrentPlayer] = useState(players[0]);\n  const [displayNextPlayer, setDisplayNextPlayer] = useState(false);\n  const [currentUser, setCurrentUser] = useState({displayName: 'none', email: 'none'}); \n  const [onlineUsers, setOnlineUsers] = useState(null);\n\n  function playerAction(e, hit) {\n    e.preventDefault();\n    if(hit) {\n      setCurrentCard(deck.getTopCard());\n    }\n    else {\n      nextPlayer();\n    }\n  }\n  function nextPlayer(e) {\n    e.preventDefault();\n    setDisplayNextPlayer(false);\n    players.unshift(players.pop());\n    setCurrentPlayer(players[0]);\n    setCurrentCard(new Card(0, 'oi', 'ok'));\n  }\n  useEffect(() => {\n    setHandValue((prevState) => {\n      return prevState + currentCard.faceValue;\n    });\n  }, [currentCard]);\n  useEffect(() => {\n    currentPlayer.handValue = handValue;\n    if(handValue > 21) {\n      currentPlayer.handValue = 0;\n      currentPlayer.bankrupt = true;\n      setDisplayNextPlayer(true);\n    }\n  }, [handValue]);\n  useEffect(() => {\n    setHandValue(currentPlayer.handValue);\n    if(currentPlayer.handValue != 0 || currentPlayer.bankrupt) {\n      gameEnd();\n    }\n  }, [currentPlayer]);\n  function gameEnd() {\n    let winner = players[0];\n    players.map((player) => {\n      if(player.handValue > winner.handValue) {\n        winner = player;\n      }\n      player.handValue = 0;\n    });\n    winner.score++;\n    setHandValue(0);\n    setCurrentCard(new Card(0, 'oi', 'ok'));\n  }\n  return (\n    <div className=\"App\">\n      <form>\n        <div style={allPlayersStyle}>\n          {\n            players.map((player) => {\n              return <div style={playerStyle}>\n                Player: {player.name} <br/>\n                Score: {player.score} <br/>\n                Hand value: {player.handValue}\n              </div>\n            })\n          }\n        </div>\n        <div id='currentCard'>{currentCard.faceValue !== 0 ? currentCard.color + \" \" + currentCard.faceValue + \" of \" + currentCard.suit : null}</div>\n        <div id='handValue'>{'Hand value: ' + handValue}</div>\n        {currentPlayer.displayName + '\\'s turn!'}\n        {\n          displayNextPlayer ? <button onClick={(e) => nextPlayer(e)}>Next Player</button> : \n          <div>\n            <button onClick={(e) => playerAction(e, true)}>Hit</button>\n            <button onClick={(e) => nextPlayer(e)}>Pass</button>\n          </div>\n        }\n      </form>\n    </div>\n  );\n}\n\nexport default Game;","import React from 'react';\n\nexport default function AwaitingOpponents() {\n    return(\n        <div>\n            <h1>awaiting opponents</h1>\n        </div>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Game from './components/Game';\nimport AwaitingOpponents from './components/AwaitingOpponents';\n\nimport './App.css';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport * as firebaseui from 'firebaseui';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyB_tSulELHqtuDTiSLN6O5ytJkFwEEJ_wk\",\n    authDomain: \"bruno-blackjack.firebaseapp.com\",\n    databaseURL: \"https://bruno-blackjack.firebaseio.com\",\n    projectId: \"bruno-blackjack\",\n    storageBucket: \"bruno-blackjack.appspot.com\",\n    messagingSenderId: \"956053403189\",\n    appId: \"1:956053403189:web:52524a0813b4f16914a37c\"\n};\nfirebase.initializeApp(firebaseConfig);\nvar ui = new firebaseui.auth.AuthUI(firebase.auth());\nvar auth = firebase.auth();\n\nexport default function App() {\n    const [currentUser, setCurrentUser] = useState({displayName: 'none', email: 'none'});\n    const [onlineUsers, setOnlineUsers] = useState({});\n    ui.start('#firebaseui-auth-container', {\n        signInOptions: [\n            firebase.auth.GoogleAuthProvider.PROVIDER_ID\n        ]\n    });\n    useEffect(() => {\n        if(currentUser.displayName == 'none') {\n            return;\n        }\n        \n    }, [currentUser]);\n    useEffect(() => {\n        console.log(Object.keys(onlineUsers).length);\n    }, [onlineUsers]);\n    useEffect(() => {\n        firebase.database().ref('users/').on('value', (snapshot) => {\n            if (snapshot.val() != null) {\n                setOnlineUsers(snapshot.val());\n            }\n        })\n        console.log('online uzerz');\n        console.log(onlineUsers);\n        console.log('users length');\n        console.log(Object.keys(onlineUsers).length);\n        auth.onAuthStateChanged((user) => {\n            console.log(user);\n            if(user) {\n                let userExists = false;\n                console.log('user uid')\n                    console.log(user.uid);\n                for(let onlineUser in onlineUsers) {\n                    if(user.uid == onlineUser.uid) {\n                        userExists = true;\n                    }\n                }\n                if(!userExists) {\n                    setCurrentUser(\n                        {\n                            displayName: auth.currentUser.displayName,\n                            email: auth.currentUser.email,\n                            uid: auth.currentUser.uid\n                        }\n                    );\n                    firebase.database().ref('users/' + auth.currentUser.uid).set({\n                        displayName: auth.currentUser.displayName,\n                        email: auth.currentUser.email,\n                        uid: auth.currentUser.uid\n                    })\n                }\n            }\n        })\n    }, []);\n    return(\n        <div>\n            <div id='firebaseui-auth-container'></div>\n            {\n                currentUser.displayName != 'none'\n                ? <h1>Logged in as: {currentUser.email}</h1>\n                : null\n            }\n            {\n                Object.keys(onlineUsers).length > 1\n                ? <Game></Game>\n                : <AwaitingOpponents/>\n            }\n        </div>\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}